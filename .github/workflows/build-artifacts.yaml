name: deploy

on:
  pull_request:
  release:
    types: [published]

env:
  DOCKER_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  ENVIRONMENT: ${{ startsWith(github.ref, 'refs/tags/v') && 'production' || 'development' }}
  REF: ${{ startsWith(github.ref, 'refs/tags/v') && github.ref || github.head_ref }}

jobs:
  docker-build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Tool Versions
        uses: asdf-vm/actions/install@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Retrieve Go version
        run: |
          echo "::set-output name=version::$(grep golang .tool-versions | awk '{ print $2 }')"
        id: go
      - name: Generate Docker Image Tag(s)
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern=v{{version}}
            type=sha
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          build-args: GO_VERSION=${{ steps.go.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  update-production-tag:
    runs-on: ubuntu-latest
    needs:
      - docker-build-push
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Update the production tag so that this version is set to be deployed by
      # ArgoCD. This is a workaround until they support using tags directly, see:
      # https://github.com/argoproj/argo-cd/issues/5609
      - name: Update 'production' tag
        run: git tag -d production; git tag production; git push origin refs/tags/production --force-with-lease
